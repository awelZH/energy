---
title: "Auswertung Wärmepumpen"
subtitle: "(Grundwasser)"
author: "Levi Fuchs"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Auswertung Wärmepumpen (Grundwasser)

Für die Energiestatistik werden auch Angaben zu den Wärmepumpen ausgewertet<br> Die Daten für Grundwasser-WP werden als Excel-Daten von der Abteilung Gewässerschutz (Andrea Schildknecht) an die Abteilung Energie geliefert und können mit R eingelesen, umgeformt und ausgewertet werden.

## Inputdaten

```{r}
#| label: load-packages
#| include: false

library(dplyr)
library(ggplot2)
library(tidyr)
library(readxl)
library(sf)

```

```{r}
#| label: load-input-data
#| include: false

#input_grund_wp <- read_excel("G:/Ef/Planung/Grundlagen/Kantonale Energie Statistik/Sammlung der Daten/Grundwasser WP/2023/Statistik Energie Ende 2023.xlsx")
temp_file <- tempfile(fileext = ".xlsx")
GET("https://raw.githubusercontent.com/awelZH/energy/refs/heads/main/data/input/grundwasser_wp_2023.xlsx", write_disk(temp_file, overwrite = TRUE))
input_grund_wp <- read_excel(temp_file)
Kennwerte <- read.csv("https://raw.githubusercontent.com/awelZH/energy/refs/heads/main/data/input/kennwerte.csv", encoding="UTF-8", sep=";", header = T)

#Alles ab Reihe "Summen" entfernen
input_grund_wp <- input_grund_wp[-((which(input_grund_wp[,1] == "Summen")):nrow(input_grund_wp)),]
```

```{r}
#| label: tidy up
#| echo: true

#namen und datentypen anpassen
names(input_grund_wp)[3] <- "waermeentnahme_kw"
names(input_grund_wp)[4] <- "waermeeintrag_kw"
names(input_grund_wp)[9] <- "datum"
input_grund_wp$datum_sauber <- as.Date(as.numeric(input_grund_wp$datum), origin = "1900-01-01")
input_grund_wp$jahr <- as.integer(format(input_grund_wp$datum_sauber, "%Y"))

#NAs können vernachlässigt werden
```

# Einlesen der Polygon Feature Class "Gemeindegrenzen ZH", Quelle: WFS-Geodienst

```{r}
#| label: get-wfs-gemeindegrenzen
#| echo: false

# Daten abrufen
gemeinden <- st_read("https://maps.zh.ch/wfs/OGDZHWFS?Service=WFS&Request=GetCapabilities", layer = "ms:ogd-0405_arv_basis_avzh_gemeinden_f")
```

# Testen, ob Gemeinden gleich geschrieben sind, da (noch) keine BFS-Nummer angegeben ist in "input_grund_wp"

```{r}
#| label: test-gemeindenamen
#| echo: false

#unique(anlagen_grund_wp$gemeinde)
#unique(gemeinden$name)
#(ZH) kommt im Grundwasser-Datensatz nicht vor 

```

```{r}
#| label: join-gemeindenamen
#| echo: false

gemeinden$name_clean <- sub(" \\(ZH\\)", "", gemeinden$name)

# Entferne Duplikate in 'gemeinden' und behalte nur die erste Zeile für jede 'name_clean'
gemeinden <- gemeinden %>%
  group_by(name_clean) %>%
  slice(1) %>%
  ungroup()

# Join der beiden Datensätze basierend auf der bereinigten Spalte
join_gemeindenamen <- left_join(input_grund_wp, gemeinden, by = c("Gemeinde" = "name_clean"))# Join attributes
```

# Datensatz anlagen_grund_wp erstellen

```{r}
#| label: anlagendatensatz erstellen
#| echo: false

anlagen_grund_wp <- join_gemeindenamen %>%
  select(`GWR-Nr.`, bfsnr, name, waermeentnahme_kw, waermeeintrag_kw, datum_sauber, jahr)

#spaltennamen ändern
colnames(anlagen_grund_wp) <- c("anlage", "bfsnr", "gemeindename", "waermeentnahme_kw", "waermeeintrag_kw", "datum", "jahr")
```

# Datenverarbeitung

```{r}
#| label: wrangle-data
#| echo: true

# Define the time range
erstes_jahr <- min(anlagen_grund_wp$jahr)
aktuelles_jahr <- max(anlagen_grund_wp$jahr)

# Create a sequence of years from 1983 to the current year
years <- tibble(jahr = seq(erstes_jahr, aktuelles_jahr))

# Extract unique combinations of bfsnr and name values
bfsnr_name_values <- anlagen_grund_wp %>% select(bfsnr, gemeindename) %>% distinct()

# Create a complete time series for each combination of bfsnr and name
complete_time_series <- bfsnr_name_values %>%
  crossing(jahr = seq(erstes_jahr, aktuelles_jahr))

grundwasser_wp <- tibble(anlagen_grund_wp) %>% 
  mutate(jahr = year(datum)) %>%
  group_by(bfsnr, gemeindename, jahr) %>% 
  summarise(
    total_waermeentnahme_kw = sum(waermeentnahme_kw, na.rm = TRUE),
    total_waermeeintrag_kw = sum(waermeeintrag_kw, na.rm = TRUE),
    anzahl = n(),
    .groups = 'drop'
  ) %>%
  right_join(complete_time_series, by = c("bfsnr", "gemeindename", "jahr")) %>%
  arrange(bfsnr, gemeindename, jahr) %>%
  group_by(bfsnr, gemeindename) %>%
  mutate(
    total_waermeentnahme_kw = coalesce(total_waermeentnahme_kw, 0),
    total_waermeeintrag_kw = coalesce(total_waermeeintrag_kw, 0),
    anzahl = coalesce(anzahl, 0),
    cum_waermeentnahme_kw = cumsum(total_waermeentnahme_kw),
    cum_waermeeintrag_kw = cumsum(total_waermeeintrag_kw),
    cum_anzahl = cumsum(anzahl)
  ) %>%
  ungroup()

head(grundwasser_wp,30)

```
